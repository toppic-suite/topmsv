<!DOCTYPE html>
<html lang="en">
<head>
	<% include ../partials/head %>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js" ></script>
	<script src="https://d3js.org/d3.v5.min.js"></script>
	<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	<script src="js/spectrum_graph/invokespectrum.js" ></script>
	<script src="js/spectrum_graph/spectrumparameters.js" ></script>
	<script src="js/spectrum_graph/spectrumgraph.js" ></script>
	<script src="js/spectrum_graph/spectrumdownload.js" ></script>
	<script src="js/download/FileSaver.js"></script>
	<script src="js/download/saveImage.js"></script>
	<link rel="stylesheet" href="css/jquery-ui.min.css">
</head>
<body class="container">

	<main>
<!--		<div class="jumbotron">-->


<!--		</div>-->

		<!--<div class="jumbotron">
			<h2>
				<p><strong>ScanLevel Two</strong></p>
				<p>ScanID: <span id="scanID2"></span></p>
				<p id="scanLevel2"></p>
				<p>Precursor m/z value: <span id="prec_mz"></span></p>
				<button type="submit" id="prev2">Previous</button>
				<button type="submit" id="next2">Next</button>
			</h2>
			<svg id="spectrum2"></svg>
		</div>-->
		<div class="jumbotron">
			<div>
				<h2><strong>Project Summary</strong></h2>
				<ul id="projectsummary">
					<li>Project Name: <%= summary.ProjectName %></li>
					<li>File Name: <%= fileName %></li>
					<!--				<li>Project Status: <%= summary.ProjectStatus %></li>-->
					<!--				<li>Email Address: <%= summary.EmailAddress %></li>-->

					<!--				<li>Scan Range: <%= scanRange.MIN %> - <%= scanRange.MAX %></li>-->
				</ul>
			</div>
			<hr />
			<div id="input">
				<p><strong>Scan Range: <%= scanRange.MIN %> - <%= scanRange.MAX %></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label for="scanID">Scan Number within Scan Range:&nbsp;&nbsp;</label>
					<input type="number" id="scanID" name="scanID" min=<%= scanRange.MIN %> max=<%= scanRange.MAX %>>
					<button type="submit" id="request">Request</button></p>
				<input type="hidden" id="projectCode" name="projectCode" value="<%= projectCode %>">
				<input type="hidden" id="projectDir" name="projectDir" value="<%= projectDir %>">
				<input type="hidden" id="rangeMin" value=<%= scanRange.MIN %>>
				<input type="hidden" id="rangeMax" value=<%= scanRange.MAX %>>

			</div>

			<div id="scanLevelOne">
				<p class="scanleveltitle"><b>Scan Level One</b></p>
				<p id="scanid1">Scan Number: <span id="scanID1"></span>
				</p>
				<br />
				<svg id="spectrum1"></svg><br />
				<button type="submit" id="prev1">Previous</button>
				<button type="submit" id="next1">Next</button>

			</div>
			<hr />
			<div id="scanLevelTwo">
				<p class="scanleveltitle"><b>Scan Level Two</b></p>
				<p id="scanid2">Scan Number: <span id="scanID2"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Precursor MZ: <span id="prec_mz"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					Precursor Charge: <span id="prec_charge"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					Precursor Intensity: <span id="prec_inte"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
					RetentionTime: <span id="rt"></span></p>
				<div id="tabs">

					<ul id="tabList">
					</ul>
					<svg id="spectrum2"></svg>
				</div>

			</div>
		</div>
	</main>
	<script>
/*		var scanTwolist = [];
		function getRelatedScan1(scanID) {
			var xhttp = new XMLHttpRequest();
			xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200) {
					var response = this.responseText;
					if(response !== "0") {
						loadPeakList2(response);
						getPrecMZ(response);
					}else {
						// Empty Tabs
					}
				}
			};
			xhttp.open("GET", "relatedScan1?projectDir=" + document.getElementById("projectDir").value + "&scanID=" + scanID, true);
			xhttp.send();
		}*/
		function getRelatedScan2(scanID) {
			var xhttp = new XMLHttpRequest();
			xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200) {
					var response = this.responseText;
					loadPeakList1(response);
					getScanLevelTwoList(response,scanID);
					//getPrecMZ(scanID);
				}
			};
			xhttp.open("GET", "relatedScan2?projectDir=" + document.getElementById("projectDir").value + "&scanID=" + scanID, true);
			xhttp.send();
		}
		function getScanLevel(scanID) {
			var xhttp = new XMLHttpRequest();
			xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200) {
					var response = this.responseText;
					if (response === "1") {
						loadPeakList1(scanID);
						//getPrecMZ(scanID);
						getScanLevelTwoList(scanID, (parseInt(scanID)+1).toString());
						// getRelatedScan1(scanID);
					}else {
						// loadPeakList2(scanID);
						//getPrecMZ(scanID);
						getRelatedScan2(scanID);
					}
				}
			};
			xhttp.open("GET", "scanlevel?projectDir=" + document.getElementById("projectDir").value + "&scanID=" + scanID, true);
			xhttp.send();
		}
		function getScanID(ID) {
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    var response = this.responseText;
                    getScanLevel(response);
                }
            };
            xhttp.open("GET", "scanID?projectDir=" + document.getElementById("projectDir").value + "&ID=" + ID, true);
            xhttp.send();
        }
/*        function getPrecMZ(scanID) {
			if (scanID !== '0') {
				var xhttp = new XMLHttpRequest();
				xhttp.onreadystatechange = function () {
					if (this.readyState == 4 && this.status == 200) {
						var response = this.responseText;
						scanTwolist.push(response);
						//return response;
						//console.log(response);
						//document.getElementById("prec_mz").innerText = response;
					}
				};
				xhttp.open("GET", "precMZ?projectDir=" + document.getElementById("projectDir").value + "&scanID=" + scanID, false);
				xhttp.send();
			}
		}*/
		function loadPeakList1(scanID) {
			if (scanID !== '0') {
				var xhttp = new XMLHttpRequest();
				xhttp.onreadystatechange = function () {
					if (this.readyState == 4 && this.status == 200) {
						var t3 = performance.now();
						console.log("Call to fetch peaklist1 data from server took " + (t3 - t2) + " milliseconds.");
						var response = JSON.parse(this.responseText);
						console.log(response);
						//console.log(typeof response[0].intensity);
						document.getElementById("scanID1").innerText = scanID;
						//response.sort(compare);
						//console.log(response);
						var t0 = performance.now();
						addSpectrum1(response, []);
						var t1 = performance.now();
						console.log("Call to show figure took " + (t1 - t0) + " milliseconds.");
					}
				};
				var t2 = performance.now();
				xhttp.open("GET", "peaklist?projectDir=" + document.getElementById("projectDir").value + "&scanID=" + scanID, true);
				xhttp.send();
			}else{
				alert("NULL");
			}
		}

/*		function loadPeakList2(scanID) {
			if(scanID !== '0') {
				var xhttp = new XMLHttpRequest();
				xhttp.onreadystatechange = function () {
					if (this.readyState == 4 && this.status == 200) {
						var t5 = performance.now();
						console.log("Call to fetch peaklist2 data from server took " + (t5 - t4) + " milliseconds.");
						var response = JSON.parse(this.responseText);
						document.getElementById("scanID2").innerText = scanID;
						//getPrecMZ(scanID);
						var t6 = performance.now();
						addSpectrum2(response, []);
						var t7 = performance.now();
						console.log("Call to show figure took " + (t7 - t6) + " milliseconds.");
					}
				};
				var t4 = performance.now();
				xhttp.open("GET", "peaklist?projectDir=" + document.getElementById("projectDir").value + "&scanID=" + scanID, true);
				xhttp.send();
			}else{
				alert("NULL");
			}
		}*/
		function loadPeakList2(scanID, prec_mz, prec_charge, prec_inte, rt) {
			if(scanID !== '0') {
				var xhttp = new XMLHttpRequest();
				xhttp.onreadystatechange = function () {
					if (this.readyState == 4 && this.status == 200) {
						var t5 = performance.now();
						console.log("Call to fetch peaklist2 data from server took " + (t5 - t4) + " milliseconds.");
						var response = JSON.parse(this.responseText);
						// document.getElementById("scanID2").innerText = scanID;
						//getPrecMZ(scanID);
						var t6 = performance.now();
						addSpectrum2(response, []);
						var t7 = performance.now();
						console.log("Call to show figure took " + (t7 - t6) + " milliseconds.");
						document.getElementById("scanID2").innerHTML = scanID;
						document.getElementById("prec_mz").innerHTML = prec_mz.toFixed(4);
						document.getElementById("prec_charge").innerHTML = prec_charge;
						document.getElementById("prec_inte").innerHTML = prec_inte.toFixed(4);
						document.getElementById("rt").innerHTML = rt.toFixed(4);
					}
				};
				var t4 = performance.now();
				xhttp.open("GET", "peaklist?projectDir=" + document.getElementById("projectDir").value + "&scanID=" + scanID, true);
				xhttp.send();
			}else{
				alert("NULL");
			}
		}
		function prev(scanID) {
			var xhttp = new XMLHttpRequest();
			xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200) {
					//console.log("Call to fetch prev id from server took " + (t5 - t4) + " milliseconds.");
					var response = this.responseText;
					if(response !== '0'){
						getScanID(response);
					}else {
						/*$( "#spectrum1" ).empty();
						$( "#spectrum2" ).empty();
						$("#scanID1").empty();
						cleanInfo();*/
						alert("NULL");
					}
				}
			};
			xhttp.open("GET", "prev?projectDir=" + document.getElementById("projectDir").value + "&scanID=" + scanID, true);
			xhttp.send();
		}
		function next(scanID) {
			var xhttp = new XMLHttpRequest();
			xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200) {
					//console.log("Call to fetch next id from server took " + (t7 - t6) + " milliseconds.");
					var response = this.responseText;
					if(response !== '0') {
						getScanID(response);
					}else {
						/*$("#spectrum1" ).empty();
						$("#spectrum2" ).empty();
						$("#scanID1").empty();
						cleanInfo();*/
						alert("NULL");
					}
				}
			};
			xhttp.open("GET", "next?projectDir=" + document.getElementById("projectDir").value + "&scanID=" + scanID, true);
			xhttp.send();
		}
		function cleanInfo() {
			$("#scanID2").empty();
			$("#prec_mz").empty();
			$("#prec_charge").empty();
			$("#prec_inte").empty();
			$("#rt").empty();
		}
		function compare(a, b){
			var a_inte = a.intenstiy;
			var b_inte = b.intensity;
			return a_inte - b_inte;
		}

		function getScanLevelTwoList(scanID,target) {
			var xhttp = new XMLHttpRequest();
			xhttp.onreadystatechange = function () {
				if (this.readyState == 4 && this.status == 200) {
					var response = JSON.parse(this.responseText);
					console.log(response);
					// $("#tabs li").remove();
					$( "#tabs" ).tabs();
					$("#tabs li").remove();
					$( "#tabs" ).tabs("destroy");
					// var tabs = $( "#tabs" ).tabs();
					// var ul = tabs.find( "ul" );
					response.forEach(function (item) {
						//console.log(item.scanID);
						//getPrecMZ(item.scanID);
						var scanTwoNum = item.scanID;
						$("#tabs ul").append('<li><a href="#spectrum2"' + ' id='+ scanTwoNum + ' onclick="loadPeakList2(' + scanTwoNum + ', ' + item.prec_mz + ', ' + item.prec_charge + ', ' + item.prec_inte + ', ' + item.rt + ')">'+ item.prec_mz.toFixed(4) + '</a></li>');
						// $( '<li><a href="#spectrum2" class="ui-icon ui-icon-close role=\'presentation\'" onclick="loadPeakList3(' + scanTwoNum + ')">'+ item.prec_mz + '</a></li>' ).appendTo( ul );
					});
					$( "#tabs" ).tabs();
/*
					console.log(scanID);
					console.log(document.getElementById(scanID));
*/
					console.log(target);
/*
					var showID = (parseInt(scanID) + 1).toString(10);
					console.log(showID);
					console.log(document.getElementById(showID));
*/
					document.getElementById(target).click();
					// $( "#tabs" ).tabs( "load", 0 );
					// var i = 0;
					// scanTwolist.forEach(function (scan) {
					// 	$("#tabs ul").append('<li><a href="#tabs-2" onclick="loadPeakList3(response[i].scanID)">'+ scan + '</a></li>');
					// 	i++;
					// })
					// loadPeakList3(response[0].scanID);
					//console.log(scanTwolist);
					//getPrecMZ(scanID);
				}
			};
			xhttp.open("GET", "scanTwoList?projectDir=" + document.getElementById("projectDir").value + "&scanID=" + scanID, true);
			xhttp.send();
		}
		var requestButton = document.getElementById('request');
		requestButton.addEventListener('click', function () {
			// $( "#spectrum2" ).empty();
			var requestID = document.getElementById("scanID").value;
			var min = document.getElementById("rangeMin").value;
			var max = document.getElementById("rangeMax").value;
			if(parseInt(requestID) >= parseInt(min) && parseInt(requestID) <= parseInt(max)) {
				//console.log("Yes");
				getScanLevel(document.getElementById("scanID").value);
				$("#scanID").val("");
			}else {
				//console.log("No");
				alert("Please type in one scanID within range!")
			}

			// getScanLevelTwoList(document.getElementById("scanID").value);
		},false)
		var prev1 = document.getElementById('prev1');
		prev1.addEventListener('click', function () {
			/*$( "#spectrum2" ).empty();
			$("#tabList").empty();*/
			var scanID1 = document.getElementById("scanID1").innerHTML;
			if (scanID1 !== '') {
				prev(document.getElementById("scanID1").innerHTML);
			}
		},false)
		var next1 = document.getElementById('next1');
		next1.addEventListener('click', function () {
			/*$( "#spectrum2" ).empty();
			$("#tabList").empty();*/
			var scanID1 = document.getElementById("scanID1").innerHTML;
			if (scanID1 !== '') {
				next(document.getElementById("scanID1").innerHTML);
			}
		},false)
		$( document ).ready(function() {
			var min = document.getElementById("rangeMin").value;
			getScanLevel(min);
		});
		$("#scanID").keyup(function(event) {
			if (event.keyCode === 13) {
				$("#request").click();
			}
		});
/*		var prev2 = document.getElementById('prev2');
		prev2.addEventListener('click', function () {
			prev(document.getElementById("scanID2").innerHTML);
		},false)
		var next2 = document.getElementById('next2');
		next2.addEventListener('click', function () {
			next(document.getElementById("scanID2").innerHTML);
		},false)*/
	</script>
</body>
</html>